{"version":3,"sources":["logo.svg","signUp.js","login.js","profile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Form","props","state","myData","document","getElementById","value","axios","post","then","response","console","log","data","sessionStorage","setItem","token","catch","error","errors","i","length","alert","msg","style","position","textAlign","width","height","backgroundColor","border","fontSize","left","id","type","onClick","this","submit","to","Component","FormLogin","bind","_this","get","headers","getItem","JSON","stringify","history","push","withRouter","Profile","parse","e","params","mail","display","flexWrap","padding","map","margin","update","delete","Object","keys","obj","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.880af822.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\n// import { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    submit() {\r\n        var myData = {\r\n            \"firstName\": document.getElementById(\"fName\").value,\r\n            \"lastName\": document.getElementById(\"lName\").value,\r\n            \"password\": document.getElementById(\"password\").value,\r\n            \"email\": document.getElementById(\"email\").value,\r\n\r\n\r\n\r\n        }\r\n        axios.post(\"http://localhost:9000/sign_up\", myData).then(function (response) {\r\n            console.log(\"response\", response.data);\r\n            sessionStorage.setItem(\"token\", response.data.token)\r\n            // alert(response.data)\r\n        })\r\n            .catch(function (error) {\r\n                if (error.response) {\r\n                    if (error.response.data.errors) {\r\n                        for (let i = 0; i < error.response.data.errors.length; i++) {\r\n                            alert(error.response.data.errors[i].msg);\r\n                        }\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    render() {\r\n        return (<div><div style={{ position: \"absolute\", textAlign: \"center\", width: \"50%\", height: \"90%\", backgroundColor: \"antiquewhite\", border: \"2px solid black\" }}><p style={{ fontSize: \"xxx-large\" }}> Please SignUP :-)</p></div><div style={{ position: \"absolute\", textAlign: \"center\", width: \"50%\", height: \"90%\", left: \"50%\", border: \"2px solid black\" }}>\r\n            <h1>{\"SIGN UP \"}</h1><br></br><br></br>\r\n      First Name: <input id=\"fName\"></input><br></br><br></br>\r\n      Last Name: <input id=\"lName\"></input><br></br><br></br>\r\n       Password <input id=\"password\" type=\"password\"></input><br></br><br></br>\r\n       Email: <input id=\"email\"></input><br></br><br></br>\r\n\r\n            <button onClick={this.submit}>Submit</button><br></br><br></br>\r\n\r\n            <Link to=\"/login\">GO TO LOGIN IN</Link>\r\n        </div></div>);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Form; ","import React, { Component } from 'react';\r\n// import { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { BrowserRouter, Route, Link, withRouter } from \"react-router-dom\";\r\n\r\nclass FormLogin extends Component {\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.submit = this.submit.bind(this)\r\n\r\n        this.state = {}\r\n    }\r\n\r\n    submit() {\r\n        // window.location.href=\"/profile\"\r\n\r\n        var _this = this\r\n\r\n        var myData = {\r\n            \"email\": document.getElementById(\"email\").value,\r\n            \"password\": document.getElementById(\"password\").value,\r\n        }\r\n        axios.post(\"http://localhost:9000/api/auth/login\", myData).then(function (response) {\r\n            sessionStorage.setItem(\"token\", response.data.token)\r\n\r\n            return axios.get(\"http://localhost:9000/api/auth/profiles\", {\r\n                headers: {\r\n                    'x-auth-token': sessionStorage.getItem(\"token\")\r\n                }\r\n            }).then((response) => {\r\n                sessionStorage.setItem(\"data\", JSON.stringify(response.data))\r\n                console.log(_this.props)\r\n                _this.props.history.push(\"/profile\")\r\n            }).catch(function (error) {\r\n                console.log(\"response2\", error);\r\n\r\n\r\n\r\n                if (error.response) {\r\n                    if (error.response.data.errors) {\r\n                        for (let i = 0; i < error.response.data.errors.length; i++) {\r\n                            alert(error.response.data.errors[i].msg);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n\r\n        }).catch(function (error) {\r\n\r\n\r\n            if (error.response) {\r\n                if (error.response.data.errors) {\r\n                    for (let i = 0; i < error.response.data.errors.length; i++) {\r\n                        alert(error.response.data.errors[i].msg);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    render() {\r\n        return (<div><div style={{ position: \"absolute\", textAlign: \"center\", width: \"50%\", height: \"90%\", backgroundColor: \"antiquewhite\", border: \"2px solid black\" }}><p style={{ fontSize: \"xxx-large\" }}> Please Login :-)</p></div><div style={{ position: \"absolute\", textAlign: \"center\", width: \"50%\", height: \"90%\", left: \"50%\", border: \"2px solid black\" }}>\r\n            <h1>{\"LOGIN IN\"}</h1><br></br><br></br>\r\n\r\nEmail: <input id=\"email\"></input><br></br><br></br>\r\nPassword <input id=\"password\" type=\"password\"></input><br></br><br></br>\r\n\r\n\r\n            <button onClick={this.submit}>Submit</button><br></br><br></br>\r\n\r\n            <Link to=\"/\">GO TO SIGNUP IN</Link>\r\n        </div></div>);\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withRouter(FormLogin); ","import React, { Component } from 'react';\r\n// import { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        var data = JSON.parse(sessionStorage.getItem(\"data\"))\r\n        this.state = { data: data }\r\n    }\r\n    update(e) {\r\n        console.log(\"Update\", e);\r\n\r\n\r\n        var myData = {\r\n\r\n            // \"email\": document.getElementById(\"email\").value,\r\n            // \"password\": document.getElementById(\"password\").value,\r\n\r\n\r\n\r\n\r\n        }\r\n        axios.post(\"http://localhost:9000/api/auth/delete/\" + e, {\r\n\r\n            params: {\r\n                mail: e\r\n            },\r\n            headers: {\r\n                'x-auth-token': sessionStorage.getItem(\"token\")\r\n            },\r\n        }).then(function (response) {\r\n            console.log(\"response\", response.data);\r\n            sessionStorage.setItem(\"token\", response.data.token)\r\n            // alert(response.data)\r\n        })\r\n            .catch(function (error) {\r\n                console.log(\"error\", error);\r\n\r\n\r\n                // for (let i = 0; i < error.response.data.errors.length; i++) {\r\n                //     alert(error.response.data.errors[i].msg);\r\n                // }\r\n\r\n            });\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    render() {\r\n        console.log(this.state.data)\r\n        return (<div id=\"main\" style={{ display: \"flex\", flexWrap: \"wrap\", padding: \"40px\", backgroundColor: \"aliceblue\" }}>\r\n\r\n            {console.log(\"data\", this.state.data)}\r\n            {this.state.data.map((value) => {\r\n\r\n                return (<div style={{ border: '2px solid black', height: \"200px\", margin: \"10px\", width: \"300px\" }}>\r\n                    <div> <button onClick={() => this.update(value[\"email\"])}>Update</button>  <button onClick={this.delete}>delete</button> </div>{\r\n\r\n                        Object.keys(value).map((obj, i) => {\r\n                            if (obj == \"firstName\" || obj == \"lastName\" || obj == \"email\") {\r\n                                { console.log(value[obj]) }\r\n                                return (\r\n\r\n                                    <div style={{ margin: \"2px\" }}>\r\n                                        {obj}: {value[obj]}\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })\r\n\r\n                    }\r\n                </div>)\r\n            })}\r\n\r\n        </div>);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Profile; ","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Form from './signUp'\nimport FormLogin from './login'\nimport Profile from './profile'\n\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Route exact path=\"/\">   <Form></Form></Route>\n      <Route path=\"/login\">   <FormLogin></FormLogin>\n      </Route>\n      <Route path=\"/profile\">   <Profile></Profile>\n      </Route>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}